{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TheGym\\\\Desktop\\\\eazzyinteractfinal\\\\eazzy-interact\\\\src\\\\components\\\\registerform.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useNavigate } from 'react-router';\nimport 'react-toastify/dist/ReactToastify.css';\nimport image from \"../../../assets/signup.svg\";\nimport { signup } from '../../../redux/actions/auth';\nimport { fetch_ngos } from '../../../redux/actions/ngos.jsx';\nimport picture from \"../../../assets/bnr.svg\";\nimport SignupSnipper from './SpinnerBtn';\nimport { SignupBackground, Logo, SignupContainer, Content, Header, Picture, LogoHeader, Small, Title, FormContainer, MyForm, ButtonContainer, StyledLink, Label, Form, InputField, InputFieldSelect, InputOption, Paragraph } from './signupStyle.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = ({\n  signup,\n  isAuthenticated,\n  fetch_ngos,\n  ngos\n}) => {\n  _s();\n\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [selectValue, setSelectValue] = useState();\n  const [formValues, setFormValues] = useState({\n    ngoName: '',\n    ngoType: '',\n    fullName: '',\n    position: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const format = '^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$';\n\n  const navigateTo = (path = '/') => navigate(path, {\n    replace: true\n  });\n\n  const {\n    ngoName,\n    ngoType,\n    fullName,\n    position,\n    email,\n    password,\n    confirmPassword\n  } = formValues;\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (!loading) {\n      setLoading(false);\n\n      if (password.length < 8) {\n        toast.warn('Password should be at least 8 characters ', {\n          position: 'top-right',\n          autoClose: 4000\n        });\n      } else if (password.search(/[a-z]/) < 0) {\n        toast.warn('Your password must contain at least one lower case letter(example q, f, a). ', {\n          position: 'top-right',\n          autoClose: 4000\n        });\n      } else if (password.search(/[A-Z]/) < 0) {\n        toast.warn('Your password must contain at least one UPPER CASE letter(example A, T, B). ', {\n          position: 'top-right',\n          autoClose: 4000\n        });\n      } else if (password.search(/[0-9]/) < 0) {\n        toast.warn('Your password must contain at least one DIGIT(example 1, 2, 4). ', {\n          position: 'top-right',\n          autoClose: 4000\n        });\n      } else if (password.search(/[!@#\\$%\\^&\\*_]/) < 0) {\n        toast.warn('Your password must contain at least one special character example -[ ! @ # $ % ^ & * _ ]', {\n          position: 'top-right',\n          autoClose: 4000\n        });\n      } else if (password !== confirmPassword) {\n        toast.warn('Passwords do not match ', {\n          position: 'top-right',\n          autoClose: 4000\n        });\n      } else {\n        signup(ngoName, ngoType, fullName, position, email, password, setLoading, navigateTo);\n      }\n    }\n  };\n\n  const onChange = e => {\n    setFormValues({ ...formValues,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSelectChange = data => {\n    setFormValues({ ...formValues,\n      ngoName: data['value']\n    });\n    setSelectValue(data['label']);\n  };\n\n  if (isAuthenticated) {\n    navigateTo();\n  }\n\n  const handleFocus = _ => {\n    setFocused(true);\n  };\n\n  const getNGOs = async _ => {\n    await fetch_ngos('ngo');\n    let options = [];\n    ngos.forEach(ngo => {\n      if (ngo['name'] !== 'Admin') {\n        options.push({\n          value: ngo['id'],\n          label: ngo['name']\n        });\n      }\n    });\n    return options;\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignupBackground, {\n    children: [/*#__PURE__*/_jsxDEV(Logo, {\n      src: image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SignupContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Content, {\n        children: /*#__PURE__*/_jsxDEV(Header, {\n          children: [/*#__PURE__*/_jsxDEV(Picture, {\n            src: picture\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(LogoHeader, {\n            children: [\"NBR \", /*#__PURE__*/_jsxDEV(Small, {\n              children: \"SCGs Data Map\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"NGO Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MyForm, {\n          onSubmit: e => onSubmit(e),\n          autoComplete: \"false\",\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: \"NGO name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(AsyncSelect, {\n              cacheOptions: true,\n              defaultOptions: true,\n              classname: \"js-example-basic-single\",\n              className: \"inputs\",\n              loadOptions: getNGOs,\n              placeholder: \"Select Your Organisation\",\n              value: selectValue,\n              inputValue: selectValue,\n              onChange: handleSelectChange,\n              isSearchable: true,\n              name: \"ngoName\",\n              isMulti: false\n            }, 1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: \"Full name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(InputField, {\n              id: \"3\",\n              name: \"fullName\",\n              type: \"text\",\n              placeholder: \"input name\",\n              errorMessage: \"Your name should be 5-25 characters and should not include any special character\",\n              label: \"Full name\",\n              required: true,\n              onChange: onChange,\n              onBlur: handleFocus,\n              className: \"inputs\",\n              focused: focused.toString()\n            }, 3, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: \"Position\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(InputField, {\n              id: \"4\",\n              name: \"position\",\n              type: \"text\",\n              placeholder: \"input position\",\n              errorMessage: \"Please input your position\",\n              required: true,\n              onChange: onChange,\n              onBlur: handleFocus,\n              className: \"inputs\",\n              focused: focused.toString()\n            }, 4, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(InputField, {\n              id: \"5\",\n              name: \"email\",\n              type: \"email\",\n              placeholder: \"input email\",\n              errorMessage: \"Please input a valid email\",\n              required: true,\n              onChange: onChange,\n              onBlur: handleFocus,\n              focused: focused.toString()\n            }, 5, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(InputField, {\n              id: \"6\",\n              name: \"password\",\n              type: \"password\",\n              placeholder: \"input password\",\n              errorMessage: \"Please input your password\",\n              required: true,\n              onChange: onChange,\n              onBlur: handleFocus,\n              className: \"inputs\",\n              focused: focused.toString() // pattern={format}\n\n            }, 6, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(InputField, {\n              id: \"7\",\n              name: \"confirmPassword\",\n              type: \"password\",\n              placeholder: \"re-type your password\",\n              errorMessage: \"Please enter a strong password\",\n              required: true,\n              onChange: onChange,\n              onBlur: handleFocus,\n              className: \"inputs\",\n              focused: focused.toString() // pattern={format}\n\n            }, 7, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n            children: [/*#__PURE__*/_jsxDEV(SignupSnipper, {\n              loading: loading,\n              type: \"submit\",\n              title: \"Submit sign up request\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(StyledLink, {\n              to: \"/login\",\n              children: /*#__PURE__*/_jsxDEV(Paragraph, {\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUp, \"DMv6epvdU9K+lLnW9P4AnWAuuOM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignUp;\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  ngos: state.ngos.ngos\n});\n\nexport default connect(mapStateToProps, {\n  signup,\n  fetch_ngos\n})(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/TheGym/Desktop/eazzyinteractfinal/eazzy-interact/src/components/registerform.js"],"names":["React","useState","connect","useNavigate","signup","fetch_ngos","SignupSnipper","SignupBackground","Logo","SignupContainer","Content","Header","Picture","LogoHeader","Small","Title","FormContainer","MyForm","ButtonContainer","StyledLink","Label","Form","InputField","InputFieldSelect","InputOption","Paragraph","SignUp","isAuthenticated","ngos","navigate","loading","setLoading","selectValue","setSelectValue","formValues","setFormValues","ngoName","ngoType","fullName","position","email","password","confirmPassword","format","navigateTo","path","replace","onSubmit","e","preventDefault","length","toast","warn","autoClose","search","onChange","target","name","value","handleSelectChange","data","handleFocus","_","setFocused","getNGOs","options","forEach","ngo","push","label","image","picture","focused","toString","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useNavigate } from 'react-router';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nimport image from '../../../assets/signup.svg';\r\nimport { signup } from '../../../redux/actions/auth';\r\nimport { fetch_ngos } from '../../../redux/actions/ngos.jsx';\r\nimport picture from '../../../assets/bnr.svg';\r\nimport SignupSnipper from './SpinnerBtn';\r\nimport {\r\n    SignupBackground,\r\n    Logo,\r\n    SignupContainer,\r\n    Content,\r\n    Header,\r\n    Picture,\r\n    LogoHeader,\r\n    Small,\r\n    Title,\r\n    FormContainer,\r\n    MyForm,\r\n    ButtonContainer,\r\n    StyledLink,\r\n    Label,\r\n    Form,\r\n    InputField,\r\n    InputFieldSelect,\r\n    InputOption,\r\n    Paragraph,\r\n} from './signupStyle.js';\r\n\r\n\r\nconst SignUp = ({ signup, isAuthenticated, fetch_ngos, ngos }) => {\r\n    const navigate = useNavigate();\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [selectValue, setSelectValue] = useState();\r\n    const [formValues, setFormValues] = useState({\r\n        ngoName: '',\r\n        ngoType: '',\r\n        fullName: '',\r\n        position: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n    });\r\n    const format = '^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$';\r\n    const navigateTo = (path = '/') => navigate(path, { replace: true });\r\n\r\n    const { ngoName, ngoType, fullName, position, email, password, confirmPassword } = formValues;\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!loading) {\r\n            setLoading(false);\r\n            if (password.length < 8) {\r\n                toast.warn('Password should be at least 8 characters ', {\r\n                    position: 'top-right',\r\n                    autoClose: 4000,\r\n                });\r\n            } else if (password.search(/[a-z]/) < 0) {\r\n                toast.warn(\r\n                    'Your password must contain at least one lower case letter(example q, f, a). ',\r\n                    {\r\n                        position: 'top-right',\r\n                        autoClose: 4000,\r\n                    },\r\n                );\r\n            } else if (password.search(/[A-Z]/) < 0) {\r\n                toast.warn(\r\n                    'Your password must contain at least one UPPER CASE letter(example A, T, B). ',\r\n                    {\r\n                        position: 'top-right',\r\n                        autoClose: 4000,\r\n                    },\r\n                );\r\n            } else if (password.search(/[0-9]/) < 0) {\r\n                toast.warn('Your password must contain at least one DIGIT(example 1, 2, 4). ', {\r\n                    position: 'top-right',\r\n                    autoClose: 4000,\r\n                });\r\n            } else if (password.search(/[!@#\\$%\\^&\\*_]/) < 0) {\r\n                toast.warn(\r\n                    'Your password must contain at least one special character example -[ ! @ # $ % ^ & * _ ]',\r\n                    {\r\n                        position: 'top-right',\r\n                        autoClose: 4000,\r\n                    },\r\n                );\r\n            } else if (password !== confirmPassword) {\r\n                toast.warn('Passwords do not match ', {\r\n                    position: 'top-right',\r\n                    autoClose: 4000,\r\n                });\r\n            } else {\r\n                signup(\r\n                    ngoName,\r\n                    ngoType,\r\n                    fullName,\r\n                    position,\r\n                    email,\r\n                    password,\r\n                    setLoading,\r\n                    navigateTo,\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        setFormValues({ ...formValues, [e.target.name]: e.target.value });\r\n    };\r\n    const handleSelectChange = (data) => {\r\n        setFormValues({ ...formValues, ngoName: data['value'] });\r\n        setSelectValue(data['label']);\r\n    };\r\n\r\n    if (isAuthenticated) {\r\n        navigateTo();\r\n    }\r\n\r\n    const handleFocus = (_) => {\r\n        setFocused(true);\r\n    };\r\n\r\n    const getNGOs = async (_) => {\r\n        await fetch_ngos('ngo');\r\n\r\n        let options = [];\r\n        ngos.forEach((ngo) => {\r\n            if (ngo['name'] !== 'Admin') {\r\n                options.push({ value: ngo['id'], label: ngo['name'] });\r\n            }\r\n        });\r\n        return options;\r\n    };\r\n\r\n    return (\r\n        <SignupBackground>\r\n            <Logo src={image} />\r\n            <SignupContainer>\r\n                <Content>\r\n                    <Header>\r\n                        <Picture src={picture} />\r\n                        <LogoHeader>\r\n                            NBR <Small>SCGs Data Map</Small>\r\n                        </LogoHeader>\r\n                    </Header>\r\n                </Content>\r\n                <FormContainer>\r\n                    <Title>NGO Sign Up</Title>\r\n                    <MyForm onSubmit={(e) => onSubmit(e)} autoComplete=\"false\">\r\n                        <Form>\r\n                            <Label>NGO name</Label>\r\n                            <AsyncSelect\r\n                                key={1}\r\n                                cacheOptions\r\n                                defaultOptions\r\n                                classname=\"js-example-basic-single\"\r\n                                className=\"inputs\"\r\n                                loadOptions={getNGOs}\r\n                                placeholder=\"Select Your Organisation\"\r\n                                value={selectValue}\r\n                                inputValue={selectValue}\r\n                                onChange={handleSelectChange}\r\n                                isSearchable\r\n                                name=\"ngoName\"\r\n                                isMulti={false}\r\n                            />\r\n                        </Form>\r\n                        <Form>\r\n                            <Label>Full name</Label>\r\n                            <InputField\r\n                                id=\"3\"\r\n                                key={3}\r\n                                name=\"fullName\"\r\n                                type=\"text\"\r\n                                placeholder=\"input name\"\r\n                                errorMessage=\"Your name should be 5-25 characters and should not include any special character\"\r\n                                label=\"Full name\"\r\n                                required={true}\r\n                                onChange={onChange}\r\n                                onBlur={handleFocus}\r\n                                className=\"inputs\"\r\n                                focused={focused.toString()}\r\n                            />\r\n                        </Form>\r\n                        <Form>\r\n                            <Label>Position</Label>\r\n                            <InputField\r\n                                id=\"4\"\r\n                                key={4}\r\n                                name=\"position\"\r\n                                type=\"text\"\r\n                                placeholder=\"input position\"\r\n                                errorMessage=\"Please input your position\"\r\n                                required={true}\r\n                                onChange={onChange}\r\n                                onBlur={handleFocus}\r\n                                className=\"inputs\"\r\n                                focused={focused.toString()}\r\n                            />\r\n                        </Form>\r\n                        <Form>\r\n                            <Label>Email</Label>\r\n                            <InputField\r\n                                id=\"5\"\r\n                                key={5}\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                placeholder=\"input email\"\r\n                                errorMessage=\"Please input a valid email\"\r\n                                required={true}\r\n                                onChange={onChange}\r\n                                onBlur={handleFocus}\r\n                                focused={focused.toString()}\r\n                            />\r\n                        </Form>\r\n                        <Form>\r\n                            <Label>Password</Label>\r\n                            <InputField\r\n                                id=\"6\"\r\n                                key={6}\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                placeholder=\"input password\"\r\n                                errorMessage=\"Please input your password\"\r\n                                required={true}\r\n                                onChange={onChange}\r\n                                onBlur={handleFocus}\r\n                                className=\"inputs\"\r\n                                focused={focused.toString()}\r\n                                // pattern={format}\r\n                            />\r\n                        </Form>\r\n                        <Form>\r\n                            <Label>Confirm Password</Label>\r\n                            <InputField\r\n                                id=\"7\"\r\n                                key={7}\r\n                                name=\"confirmPassword\"\r\n                                type=\"password\"\r\n                                placeholder=\"re-type your password\"\r\n                                errorMessage=\"Please enter a strong password\"\r\n                                required={true}\r\n                                onChange={onChange}\r\n                                onBlur={handleFocus}\r\n                                className=\"inputs\"\r\n                                focused={focused.toString()}\r\n                                // pattern={format}\r\n                            />\r\n                        </Form>\r\n                        <ButtonContainer>\r\n                            <SignupSnipper\r\n                                loading={loading}\r\n                                type=\"submit\"\r\n                                title=\"Submit sign up request\"\r\n                            />\r\n                            <StyledLink to=\"/login\">\r\n                                <Paragraph>Login</Paragraph>\r\n                            </StyledLink>\r\n                        </ButtonContainer>\r\n                    </MyForm>\r\n                </FormContainer>\r\n            </SignupContainer>\r\n        </SignupBackground>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    ngos: state.ngos.ngos,\r\n});\r\n\r\nexport default connect(mapStateToProps, { signup, fetch_ngos })(SignUp);"]},"metadata":{},"sourceType":"module"}